  31 program    //PROGRAM
   1 input_1    //TK_IDENT
  19 ;          //TK_SEMICOLON
  24 const      //CONST
   1 z          //TK_IDENT
   7 =          //TK_EQU
   2 15         //TK_NUMBER
  19 ;          //TK_SEMICOLON
  34 var        //VAR
   1 x          //TK_IDENT
  18 ,          //TK_COMMA
   1 y          //TK_IDENT
  15 [          //TK_LBRACK
   2 4          //TK_NUMBER
  16 ]          //TK_RBRACK
  19 ;          //TK_SEMICOLON
  30 procedure  //PROCEDURE
   1 test       //TK_IDENT
  13 (          //TK_LPARENT
  34 var        //VAR
   1 x          //TK_IDENT
  19 ;          //TK_SEMICOLON
  34 var        //VAR
   1 y          //TK_IDENT
  14 )          //TK_RPARENT
  19 ;          //TK_SEMICOLON
  22 begin      //BEGIN
   1 x          //TK_IDENT
  20 :=         //TK_ASSIGN
   1 z          //TK_IDENT
  19 ;          //TK_SEMICOLON
   1 y          //TK_IDENT
  20 :=         //TK_ASSIGN
   1 x          //TK_IDENT
   3 +          //TK_PLUS
   2 1          //TK_NUMBER
  27 end        //END
  19 ;          //TK_SEMICOLON
  22 begin      //BEGIN
   1 x          //TK_IDENT
  20 :=         //TK_ASSIGN
   2 2          //TK_NUMBER
   5 *          //TK_TIMES
   2 2          //TK_NUMBER
  19 ;          //TK_SEMICOLON
   1 y          //TK_IDENT
  15 [          //TK_LBRACK
   1 z          //TK_IDENT
   4 -          //TK_MINUS
   2 10         //TK_NUMBER
  16 ]          //TK_RBRACK
  20 :=         //TK_ASSIGN
   1 x          //TK_IDENT
   4 -          //TK_MINUS
   2 1          //TK_NUMBER
  19 ;          //TK_SEMICOLON
  23 call       //CALL
   1 test       //TK_IDENT
  13 (          //TK_LPARENT
   1 x          //TK_IDENT
  18 ,          //TK_COMMA
   1 y          //TK_IDENT
  15 [          //TK_LBRACK
   2 1          //TK_NUMBER
  16 ]          //TK_RBRACK
  14 )          //TK_RPARENT
  19 ;          //TK_SEMICOLON
   1 x          //TK_IDENT
  20 :=         //TK_ASSIGN
   1 x          //TK_IDENT
   6 /          //TK_SLASH
   2 2          //TK_NUMBER
  19 ;          //TK_SEMICOLON
   1 y          //TK_IDENT
  15 [          //TK_LBRACK
   2 4          //TK_NUMBER
  16 ]          //TK_RBRACK
  20 :=         //TK_ASSIGN
  13 (          //TK_LPARENT
   1 z          //TK_IDENT
   3 +          //TK_PLUS
   2 1          //TK_NUMBER
  14 )          //TK_RPARENT
   6 /          //TK_SLASH
  13 (          //TK_LPARENT
   2 8          //TK_NUMBER
   5 *          //TK_TIMES
   2 2          //TK_NUMBER
  14 )          //TK_RPARENT
  19 ;          //TK_SEMICOLON
  27 end        //END
  17 .          //TK_PERIOD
